package com.prupe.mcpatcher.basemod;

import com.prupe.mcpatcher.ClassRef;
import com.prupe.mcpatcher.FieldRef;
import com.prupe.mcpatcher.MethodRef;
import com.prupe.mcpatcher.Mod;
import javassist.bytecode.AccessFlag;

import java.util.ArrayList;

import static com.prupe.mcpatcher.BinaryRegex.*;
import static com.prupe.mcpatcher.BytecodeMatcher.anyReference;
import static com.prupe.mcpatcher.BytecodeMatcher.captureReference;
import static javassist.bytecode.Opcode.*;

/**
 * Matches Block class and maps blockID and blockList fields.
 */
public class BlockMod extends com.prupe.mcpatcher.ClassMod {
    protected final boolean haveBlockRegistry;

    private static final ArrayList<BlockSubclassEntry> subclasses = new ArrayList<BlockSubclassEntry>() {
        {
            // autogenerated by blockids.pl -- do not edit
            // (block id, field class, field name, field subclass, block name)
            add(new BlockSubclassEntry(1, "Block", "stone", "BlockStone", "stone"));
            add(new BlockSubclassEntry(2, "BlockGrass", "grass", "BlockGrass", "grass"));
            add(new BlockSubclassEntry(3, "Block", "dirt", "BlockDirt", "dirt"));
            add(new BlockSubclassEntry(4, "Block", "cobblestone", "Block", "stonebrick"));
            add(new BlockSubclassEntry(5, "Block", "planks", "BlockWood", "wood"));
            add(new BlockSubclassEntry(6, "Block", "sapling", "BlockSapling", "sapling"));
            add(new BlockSubclassEntry(7, "Block", "bedrock", "Block", "bedrock"));
            add(new BlockSubclassEntry(8, "BlockFluid", "waterMoving", "BlockFlowing", "water"));
            add(new BlockSubclassEntry(9, "Block", "waterStill", "BlockStationary", "water"));
            add(new BlockSubclassEntry(10, "BlockFluid", "lavaMoving", "BlockFlowing", "lava"));
            add(new BlockSubclassEntry(11, "Block", "lavaStill", "BlockStationary", "lava"));
            add(new BlockSubclassEntry(12, "Block", "sand", "BlockSand", "sand"));
            add(new BlockSubclassEntry(13, "Block", "gravel", "BlockGravel", "gravel"));
            add(new BlockSubclassEntry(14, "Block", "oreGold", "BlockOre", "oreGold"));
            add(new BlockSubclassEntry(15, "Block", "oreIron", "BlockOre", "oreIron"));
            add(new BlockSubclassEntry(16, "Block", "oreCoal", "BlockOre", "oreCoal"));
            add(new BlockSubclassEntry(17, "Block", "wood", "BlockLog", "log"));
            add(new BlockSubclassEntry(18, "BlockLeaves", "leaves", "BlockLeaves", "leaves"));
            add(new BlockSubclassEntry(19, "Block", "sponge", "BlockSponge", "sponge"));
            add(new BlockSubclassEntry(20, "Block", "glass", "BlockGlass", "glass"));
            add(new BlockSubclassEntry(21, "Block", "oreLapis", "BlockOre", "oreLapis"));
            add(new BlockSubclassEntry(22, "Block", "blockLapis", "Block", "blockLapis"));
            add(new BlockSubclassEntry(23, "Block", "dispenser", "BlockDispenser", "dispenser"));
            add(new BlockSubclassEntry(24, "Block", "sandStone", "BlockSandStone", "sandStone"));
            add(new BlockSubclassEntry(25, "Block", "music", "BlockNote", "musicBlock"));
            add(new BlockSubclassEntry(26, "Block", "bed", "BlockBed", "bed"));
            add(new BlockSubclassEntry(27, "Block", "railPowered", "BlockRailPowered", "goldenRail"));
            add(new BlockSubclassEntry(28, "Block", "railDetector", "BlockDetectorRail", "detectorRail"));
            add(new BlockSubclassEntry(29, "BlockPistonBase", "pistonStickyBase", "BlockPistonBase", "pistonStickyBase"));
            add(new BlockSubclassEntry(30, "Block", "web", "BlockWeb", "web"));
            add(new BlockSubclassEntry(31, "BlockTallGrass", "tallGrass", "BlockTallGrass", "tallgrass"));
            add(new BlockSubclassEntry(32, "BlockDeadBush", "deadBush", "BlockDeadBush", "deadbush"));
            add(new BlockSubclassEntry(33, "BlockPistonBase", "pistonBase", "BlockPistonBase", "pistonBase"));
            add(new BlockSubclassEntry(34, "BlockPistonExtension", "pistonExtension", "BlockPistonExtension", "unnamedBlock34"));
            add(new BlockSubclassEntry(35, "Block", "cloth", "BlockColored", "cloth"));
            add(new BlockSubclassEntry(36, "BlockPistonMoving", "pistonMoving", "BlockPistonMoving", "unnamedBlock36"));
            add(new BlockSubclassEntry(37, "BlockFlower", "plantYellow", "BlockFlower", "flower"));
            add(new BlockSubclassEntry(38, "BlockFlower", "plantRed", "BlockFlower", "rose"));
            add(new BlockSubclassEntry(39, "BlockFlower", "mushroomBrown", "BlockMushroom", "mushroom"));
            add(new BlockSubclassEntry(40, "BlockFlower", "mushroomRed", "BlockMushroom", "mushroom"));
            add(new BlockSubclassEntry(41, "Block", "blockGold", "BlockOreStorage", "blockGold"));
            add(new BlockSubclassEntry(42, "Block", "blockIron", "BlockOreStorage", "blockIron"));
            add(new BlockSubclassEntry(43, "BlockHalfSlab", "stoneDoubleSlab", "BlockStep", "stoneSlab"));
            add(new BlockSubclassEntry(44, "BlockHalfSlab", "stoneSingleSlab", "BlockStep", "stoneSlab"));
            add(new BlockSubclassEntry(45, "Block", "brick", "Block", "brick"));
            add(new BlockSubclassEntry(46, "Block", "tnt", "BlockTNT", "tnt"));
            add(new BlockSubclassEntry(47, "Block", "bookShelf", "BlockBookshelf", "bookshelf"));
            add(new BlockSubclassEntry(48, "Block", "cobblestoneMossy", "Block", "stoneMoss"));
            add(new BlockSubclassEntry(49, "Block", "obsidian", "BlockObsidian", "obsidian"));
            add(new BlockSubclassEntry(50, "Block", "torchWood", "BlockTorch", "torch"));
            add(new BlockSubclassEntry(51, "BlockFire", "fire", "BlockFire", "fire"));
            add(new BlockSubclassEntry(52, "Block", "mobSpawner", "BlockMobSpawner", "mobSpawner"));
            add(new BlockSubclassEntry(53, "Block", "stairsWoodOak", "BlockStairs", "stairsWood"));
            add(new BlockSubclassEntry(54, "BlockChest", "chest", "BlockChest", "chest"));
            add(new BlockSubclassEntry(55, "BlockRedstoneWire", "redstoneWire", "BlockRedstoneWire", "redstoneDust"));
            add(new BlockSubclassEntry(56, "Block", "oreDiamond", "BlockOre", "oreDiamond"));
            add(new BlockSubclassEntry(57, "Block", "blockDiamond", "BlockOreStorage", "blockDiamond"));
            add(new BlockSubclassEntry(58, "Block", "workbench", "BlockWorkbench", "workbench"));
            add(new BlockSubclassEntry(59, "Block", "crops", "BlockCrops", "crops"));
            add(new BlockSubclassEntry(60, "Block", "tilledField", "BlockFarmland", "farmland"));
            add(new BlockSubclassEntry(61, "Block", "furnaceIdle", "BlockFurnace", "furnace"));
            add(new BlockSubclassEntry(62, "Block", "furnaceBurning", "BlockFurnace", "furnace"));
            add(new BlockSubclassEntry(63, "Block", "signPost", "BlockSign", "sign"));
            add(new BlockSubclassEntry(64, "Block", "doorWood", "BlockDoor", "doorWood"));
            add(new BlockSubclassEntry(65, "Block", "ladder", "BlockLadder", "ladder"));
            add(new BlockSubclassEntry(66, "Block", "rail", "BlockRail", "rail"));
            add(new BlockSubclassEntry(67, "Block", "stairsCobblestone", "BlockStairs", "stairsStone"));
            add(new BlockSubclassEntry(68, "Block", "signWall", "BlockSign", "sign"));
            add(new BlockSubclassEntry(69, "Block", "lever", "BlockLever", "lever"));
            add(new BlockSubclassEntry(70, "Block", "pressurePlateStone", "BlockPressurePlate", "pressurePlate"));
            add(new BlockSubclassEntry(71, "Block", "doorIron", "BlockDoor", "doorIron"));
            add(new BlockSubclassEntry(72, "Block", "pressurePlatePlanks", "BlockPressurePlate", "pressurePlate"));
            add(new BlockSubclassEntry(73, "Block", "oreRedstone", "BlockRedstoneOre", "oreRedstone"));
            add(new BlockSubclassEntry(74, "Block", "oreRedstoneGlowing", "BlockRedstoneOre", "oreRedstone"));
            add(new BlockSubclassEntry(75, "Block", "torchRedstoneIdle", "BlockRedstoneTorch", "notGate"));
            add(new BlockSubclassEntry(76, "Block", "torchRedstoneActive", "BlockRedstoneTorch", "notGate"));
            add(new BlockSubclassEntry(77, "Block", "stoneButton", "BlockButtonStone", "button"));
            add(new BlockSubclassEntry(78, "Block", "snow", "BlockSnow", "snow"));
            add(new BlockSubclassEntry(79, "Block", "ice", "BlockIce", "ice"));
            add(new BlockSubclassEntry(80, "Block", "blockSnow", "BlockSnowBlock", "snow"));
            add(new BlockSubclassEntry(81, "Block", "cactus", "BlockCactus", "cactus"));
            add(new BlockSubclassEntry(82, "Block", "blockClay", "BlockClay", "clay"));
            add(new BlockSubclassEntry(83, "Block", "reed", "BlockReed", "reeds"));
            add(new BlockSubclassEntry(84, "Block", "jukebox", "BlockJukeBox", "jukebox"));
            add(new BlockSubclassEntry(85, "Block", "fence", "BlockFence", "fence"));
            add(new BlockSubclassEntry(86, "Block", "pumpkin", "BlockPumpkin", "pumpkin"));
            add(new BlockSubclassEntry(87, "Block", "netherrack", "BlockNetherrack", "hellrock"));
            add(new BlockSubclassEntry(88, "Block", "slowSand", "BlockSoulSand", "hellsand"));
            add(new BlockSubclassEntry(89, "Block", "glowStone", "BlockGlowStone", "lightgem"));
            add(new BlockSubclassEntry(90, "BlockPortal", "portal", "BlockPortal", "portal"));
            add(new BlockSubclassEntry(91, "Block", "pumpkinLantern", "BlockPumpkin", "litpumpkin"));
            add(new BlockSubclassEntry(92, "Block", "cake", "BlockCake", "cake"));
            add(new BlockSubclassEntry(93, "BlockRedstoneRepeater", "redstoneRepeaterIdle", "BlockRedstoneRepeater", "diode"));
            add(new BlockSubclassEntry(94, "BlockRedstoneRepeater", "redstoneRepeaterActive", "BlockRedstoneRepeater", "diode"));
            add(new BlockSubclassEntry(95, "Block", "lockedChest", "BlockLockedChest", "lockedchest"));
            add(new BlockSubclassEntry(96, "Block", "trapdoor", "BlockTrapDoor", "trapdoor"));
            add(new BlockSubclassEntry(97, "Block", "silverfish", "BlockSilverfish", "monsterStoneEgg"));
            add(new BlockSubclassEntry(98, "Block", "stoneBrick", "BlockStoneBrick", "stonebricksmooth"));
            add(new BlockSubclassEntry(99, "Block", "mushroomCapBrown", "BlockMushroomCap", "mushroom"));
            add(new BlockSubclassEntry(100, "Block", "mushroomCapRed", "BlockMushroomCap", "mushroom"));
            add(new BlockSubclassEntry(101, "Block", "fenceIron", "BlockPane", "fenceIron"));
            add(new BlockSubclassEntry(102, "Block", "thinGlass", "BlockPane", "thinGlass"));
            add(new BlockSubclassEntry(103, "Block", "melon", "BlockMelon", "melon"));
            add(new BlockSubclassEntry(104, "Block", "pumpkinStem", "BlockStem", "pumpkinStem"));
            add(new BlockSubclassEntry(105, "Block", "melonStem", "BlockStem", "pumpkinStem"));
            add(new BlockSubclassEntry(106, "Block", "vine", "BlockVine", "vine"));
            add(new BlockSubclassEntry(107, "Block", "fenceGate", "BlockFenceGate", "fenceGate"));
            add(new BlockSubclassEntry(108, "Block", "stairsBrick", "BlockStairs", "stairsBrick"));
            add(new BlockSubclassEntry(109, "Block", "stairsStoneBrick", "BlockStairs", "stairsStoneBrickSmooth"));
            add(new BlockSubclassEntry(110, "BlockMycelium", "mycelium", "BlockMycelium", "mycel"));
            add(new BlockSubclassEntry(111, "Block", "waterlily", "BlockLilyPad", "waterlily"));
            add(new BlockSubclassEntry(112, "Block", "netherBrick", "Block", "netherBrick"));
            add(new BlockSubclassEntry(113, "Block", "netherFence", "BlockFence", "netherFence"));
            add(new BlockSubclassEntry(114, "Block", "stairsNetherBrick", "BlockStairs", "stairsNetherBrick"));
            add(new BlockSubclassEntry(115, "Block", "netherStalk", "BlockNetherStalk", "netherStalk"));
            add(new BlockSubclassEntry(116, "Block", "enchantmentTable", "BlockEnchantmentTable", "enchantmentTable"));
            add(new BlockSubclassEntry(117, "Block", "brewingStand", "BlockBrewingStand", "brewingStand"));
            add(new BlockSubclassEntry(118, "BlockCauldron", "cauldron", "BlockCauldron", "cauldron"));
            add(new BlockSubclassEntry(119, "Block", "endPortal", "BlockEndPortal", "unnamedBlock119"));
            add(new BlockSubclassEntry(120, "Block", "endPortalFrame", "BlockEndPortalFrame", "endPortalFrame"));
            add(new BlockSubclassEntry(121, "Block", "whiteStone", "Block", "whiteStone"));
            add(new BlockSubclassEntry(122, "Block", "dragonEgg", "BlockDragonEgg", "dragonEgg"));
            add(new BlockSubclassEntry(123, "Block", "redstoneLampIdle", "BlockRedstoneLight", "redstoneLight"));
            add(new BlockSubclassEntry(124, "Block", "redstoneLampActive", "BlockRedstoneLight", "redstoneLight"));
            add(new BlockSubclassEntry(125, "BlockHalfSlab", "woodDoubleSlab", "BlockWoodSlab", "woodSlab"));
            add(new BlockSubclassEntry(126, "BlockHalfSlab", "woodSingleSlab", "BlockWoodSlab", "woodSlab"));
            add(new BlockSubclassEntry(127, "Block", "cocoaPlant", "BlockCocoa", "cocoa"));
            add(new BlockSubclassEntry(128, "Block", "stairsSandStone", "BlockStairs", "stairsSandStone"));
            add(new BlockSubclassEntry(129, "Block", "oreEmerald", "BlockOre", "oreEmerald"));
            add(new BlockSubclassEntry(130, "Block", "enderChest", "BlockEnderChest", "enderChest"));
            add(new BlockSubclassEntry(131, "BlockTripWireSource", "tripWireSource", "BlockTripWireSource", "tripWireSource"));
            add(new BlockSubclassEntry(132, "Block", "tripWire", "BlockTripWire", "tripWire"));
            add(new BlockSubclassEntry(133, "Block", "blockEmerald", "BlockOreStorage", "blockEmerald"));
            add(new BlockSubclassEntry(134, "Block", "stairsWoodSpruce", "BlockStairs", "stairsWoodSpruce"));
            add(new BlockSubclassEntry(135, "Block", "stairsWoodBirch", "BlockStairs", "stairsWoodBirch"));
            add(new BlockSubclassEntry(136, "Block", "stairsWoodJungle", "BlockStairs", "stairsWoodJungle"));
            add(new BlockSubclassEntry(137, "Block", "commandBlock", "BlockCommandBlock", "commandBlock"));
            add(new BlockSubclassEntry(138, "BlockBeacon", "beacon", "BlockBeacon", "beacon"));
            add(new BlockSubclassEntry(139, "Block", "cobblestoneWall", "BlockWall", "cobbleWall"));
            add(new BlockSubclassEntry(140, "Block", "flowerPot", "BlockFlowerPot", "flowerPot"));
            add(new BlockSubclassEntry(141, "Block", "carrot", "BlockCarrot", "carrots"));
            add(new BlockSubclassEntry(142, "Block", "potato", "BlockPotato", "potatoes"));
            add(new BlockSubclassEntry(143, "Block", "woodenButton", "BlockButtonWood", "button"));
            add(new BlockSubclassEntry(144, "Block", "skull", "BlockSkull", "skull"));
            add(new BlockSubclassEntry(145, "Block", "anvil", "BlockAnvil", "anvil"));
            add(new BlockSubclassEntry(146, "Block", "chestTrapped", "BlockChest", "chestTrap"));
            add(new BlockSubclassEntry(147, "Block", "pressurePlateGold", "BlockPressurePlateWeighted", "weightedPlate_light"));
            add(new BlockSubclassEntry(148, "Block", "pressurePlateIron", "BlockPressurePlateWeighted", "weightedPlate_heavy"));
            add(new BlockSubclassEntry(149, "BlockComparator", "redstoneComparatorIdle", "BlockComparator", "comparator"));
            add(new BlockSubclassEntry(150, "BlockComparator", "redstoneComparatorActive", "BlockComparator", "comparator"));
            add(new BlockSubclassEntry(151, "BlockDaylightDetector", "daylightSensor", "BlockDaylightDetector", "daylightDetector"));
            add(new BlockSubclassEntry(152, "Block", "blockRedstone", "BlockPoweredOre", "blockRedstone"));
            add(new BlockSubclassEntry(153, "Block", "oreNetherQuartz", "BlockOre", "netherquartz"));
            add(new BlockSubclassEntry(154, "BlockHopper", "hopperBlock", "BlockHopper", "hopper"));
            add(new BlockSubclassEntry(155, "Block", "blockNetherQuartz", "BlockQuartz", "quartzBlock"));
            add(new BlockSubclassEntry(156, "Block", "stairsNetherQuartz", "BlockStairs", "stairsQuartz"));
            add(new BlockSubclassEntry(157, "Block", "railActivator", "BlockRailPowered", "activatorRail"));
            add(new BlockSubclassEntry(158, "Block", "dropper", "BlockDropper", "dropper"));
            add(new BlockSubclassEntry(159, "Block", "clayHardenedStained", "BlockColored", "clayHardenedStained"));
            // block id 160
            // block id 161
            // block id 162
            // block id 163
            // block id 164
            // block id 165
            // block id 166
            // block id 167
            // block id 168
            // block id 169
            add(new BlockSubclassEntry(170, "Block", "hayBlock", "BlockHay", "hayBlock"));
            add(new BlockSubclassEntry(171, "Block", "woolCarpet", "BlockCarpet", "woolCarpet"));
            add(new BlockSubclassEntry(172, "Block", "clayHardened", "Block", "clayHardened"));
            add(new BlockSubclassEntry(173, "Block", "blockCoal", "Block", "blockCoal"));
        }
    };

    public BlockMod(Mod mod) {
        super(mod);
        haveBlockRegistry = Mod.getMinecraftVersion().compareTo("13w36a") >= 0;

        final MethodRef getShortName = new MethodRef(getDeobfClass(), "getShortName", "()Ljava/lang/String;");

        if (haveBlockRegistry) {
            addClassSignature(new ConstSignature("stone"));
            addClassSignature(new ConstSignature("grass"));
            addClassSignature(new ConstSignature("dirt"));
            addClassSignature(new ConstSignature(".name"));
        } else {
            addClassSignature(new ConstSignature(" is already occupied by "));

            addMemberMapper(new FieldMapper(new FieldRef(getDeobfClass(), "blockID", "I"))
                .accessFlag(AccessFlag.PUBLIC, true)
                .accessFlag(AccessFlag.STATIC, false)
                .accessFlag(AccessFlag.FINAL, true)
            );

            addMemberMapper(new FieldMapper(new FieldRef(getDeobfClass(), "blocksList", "[LBlock;"))
                .accessFlag(AccessFlag.PUBLIC, true)
                .accessFlag(AccessFlag.STATIC, true)
                .accessFlag(AccessFlag.FINAL, true)
            );
        }

        addClassSignature(new BytecodeSignature() {
            @Override
            public String getMatchExpression() {
                return buildExpression(
                    push("tile.")
                );
            }
        }.setMethod(getShortName));
    }

    protected void addBlockSignatures() {
        for (BlockSubclassEntry entry : subclasses) {
            addBlockSignature(entry.blockID, entry.fieldClass, entry.fieldName, entry.className, entry.blockName);
        }
    }

    protected void addBlockSignature(String name) {
        for (BlockSubclassEntry entry : subclasses) {
            if (entry.className.equals(name) || entry.blockName.equals(name) || entry.fieldName.equals(name)) {
                addBlockSignature(entry.blockID, entry.fieldClass, entry.fieldName, entry.className, entry.blockName);
                return;
            }
        }
        throw new RuntimeException("unknown Block subclass: " + name);
    }

    protected void addBlockSignature(int blockID) {
        for (BlockSubclassEntry entry : subclasses) {
            if (entry.blockID == blockID) {
                addBlockSignature(entry.blockID, entry.fieldClass, entry.fieldName, entry.className, entry.blockName);
                return;
            }
        }
        throw new RuntimeException("unknown Block subclass: block ID" + blockID);
    }

    protected void addBlockSignature(final int blockID, final String fieldClass, final String fieldName, final String className, final String blockName) {
        addClassSignature(new BytecodeSignature() {
            @Override
            public String getMatchExpression() {
                return buildExpression(
                    captureReference(NEW),
                    DUP,
                    blockID == 35 ? "" : push(blockID),
                    nonGreedy(any(0, 60)),
                    blockName.startsWith("unnamedBlock") ? "" : build(
                        push(blockName),
                        anyReference(INVOKEVIRTUAL)
                    ),
                    nonGreedy(any(0, 20)),
                    captureReference(PUTSTATIC)
                );
            }
        }
            .matchStaticInitializerOnly(true)
            .addXref(1, new ClassRef(className))
            .addXref(2, new FieldRef(getDeobfClass(), fieldName, "L" + fieldClass + ";"))
        );
    }

    private static class BlockSubclassEntry {
        final int blockID;
        final String fieldClass;
        final String fieldName;
        final String className;
        final String blockName;

        BlockSubclassEntry(int blockID, String fieldClass, String fieldName, String className, String blockName) {
            this.blockID = blockID;
            this.fieldClass = fieldClass;
            this.fieldName = fieldName;
            this.className = className;
            this.blockName = blockName;
        }
    }
}
